var expect = require('chai').expect;

var Expression = require('../src');

describe('#Converter', function() {
  it('#infix // should convert from prefix to infix', function() {
    expect(Expression('(+ (* A B ) (- C D )').toInfix()).to.equal('((A * B) + (C - D))')
  });

  it('#infix // should convert from postfix to infix', function() {
    expect(Expression('((A B *) (C D /) +)').toInfix()).to.equal('((A * B) + (C / D))');
  });


  it('#postfix // should convert from infix to postfix with paranthesis', function() {
    expect(Expression('( ( A * B ) + ( C / D ) )').toPostfix()).to.equal('A B * C D / +');
  });

  it('#postfix // should convert from infix to postfix without paranthesis', function() {
    expect(Expression('A + B * C').toPostfix()).to.equal('A B C * +');
  });

  it('#postfix // should convert from infix to postfix #3(complex)', function() {
    expect(Expression('(A + B) * (C - D) / (E - D)').toPostfix()).to.equal('A B + C D - * E D - /');
  });

  it('#postfix // should convert from infix to postfix #4(complex)', function() {
    expect(Expression('((A + B) * (C - D)) / (E - D)').toPostfix()).to.equal('A B + C D - * E D - /');
  });

  it('#postfix // should convert from infix to postfix #5(complex)', function() {
    expect(Expression('( ( A * B ) + ( C / D ) )').toPostfix()).to.equal('A B * C D / +');
  });

  it('#prefix // should convert from infix to prefix without paranthesis', function() {
    expect(Expression('A + B * C').toPrefix()).to.equal('+ A * B C');
  });

  it('#prefix // should convert from infix to prefix without paranthesis', function() {
    expect(Expression('( ( A * B ) + ( C / D ) )').toPrefix()).to.equal('+ * A B / C D');
  });

  it('#prefix // should convert from infix to prefix #3(complex)', function() {
    expect(Expression('(a * (b - c) / d + a * (b - d))').toPrefix()).to.equal('+ * a / - b c d * a - b d');
  });
});
